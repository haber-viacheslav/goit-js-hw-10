{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAqCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA5CGQ,SAASC,cAAc,QAE/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAEC,iBAEF,MAAQZ,MAAAa,EAAKC,OAAEA,EAAMC,KAAEA,GAASJ,EAAEK,OAAOC,SAEzC,IAAIC,EAAaC,OAAON,EAAMO,OAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAOM,MAAOC,GAAK,EACrCvB,EAAcuB,EAAGH,GACdI,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA2B,OAAOC,QAAQ,uBAAqBzB,QAAiBC,MAAW,CAC5DyB,QAAO,GACTC,QAAS,IACTC,qBAAsB,IACtBC,aAAa,EACbC,iBAAkB,wBAClB,IAEHC,OAAM,EAAC/B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA2B,OAAOQ,QAAQ,sBAAoBhC,QAAeC,MAAW,CAC3DyB,QAAS,GACTC,QAAS,IACTE,aAAa,EACbD,qBAAsB,IACtBE,iBAAkB,uBAClB,IAENX,GAAcC,OAAOJ,EAAKK,OAE5BT,EAAEK,OAAOgB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('form');\n\nformRef.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  const { delay, amount, step } = e.target.elements;\n\n  let delayValue = Number(delay.value);\n  for (let i = 0; i < amount.value; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          opacity: 0.8,\n          timeout: 500,\n          cssAnimationDuration: 500,\n          backOverlay: true,\n          backOverlayColor: 'rgba(50,198,130,0.2)',\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          opacity: 0.8,\n          timeout: 500,\n          backOverlay: true,\n          cssAnimationDuration: 500,\n          backOverlayColor: 'rgba(255,85,73,0.2)',\n        });\n      });\n    delayValue += Number(step.value);\n  }\n  e.target.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","delay1","amount","step","target","elements","delayValue","Number","value","i","then","Notify","success","opacity","timeout","cssAnimationDuration","backOverlay","backOverlayColor","catch","failure","reset"],"version":3,"file":"03-promises.7de055c6.js.map"}