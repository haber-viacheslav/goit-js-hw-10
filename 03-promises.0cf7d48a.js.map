{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAqCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA5CSQ,SAASC,cAAc,QAE/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAEC,iBAKF,IAHA,IAAgCC,EAAAF,EAAEG,OAAOC,SAAjCC,EAAwBH,EAAxBb,MAAOiB,EAAiBJ,EAAjBI,OAAQC,EAASL,EAATK,KAEnBC,EAAaC,OAAOJ,EAAMK,OACrBC,EAAI,EAAGA,EAAIL,EAAOI,MAAOC,GAAK,EACrCxB,EAAcwB,EAAGH,GACdI,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjBJ,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,MAAK,CAC9D4B,QAAO,GACTC,QAAS,IACTC,qBAAsB,IACtBC,aAAa,EACbC,iBAAkB,wB,IAGrBC,OAAM,SAAAT,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClBJ,EAAA6B,OAAOS,QAAQ,sBAAqCP,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,MAAK,CAC7D4B,QAAS,GACTC,QAAS,IACTE,aAAa,EACbD,qBAAsB,IACtBE,iBAAkB,uB,IAGxBb,GAAcC,OAAOF,EAAKG,OAE5BV,EAAEG,OAAOqB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('form');\n\nformRef.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  const { delay, amount, step } = e.target.elements;\n\n  let delayValue = Number(delay.value);\n  for (let i = 0; i < amount.value; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          opacity: 0.8,\n          timeout: 500,\n          cssAnimationDuration: 500,\n          backOverlay: true,\n          backOverlayColor: 'rgba(50,198,130,0.2)',\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          opacity: 0.8,\n          timeout: 500,\n          backOverlay: true,\n          cssAnimationDuration: 500,\n          backOverlayColor: 'rgba(255,85,73,0.2)',\n        });\n      });\n    delayValue += Number(step.value);\n  }\n  e.target.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","_elements","target","elements","delay1","amount","step","delayValue","Number","value","i","then","param","Notify","success","concat","opacity","timeout","cssAnimationDuration","backOverlay","backOverlayColor","catch","failure","reset"],"version":3,"file":"03-promises.0cf7d48a.js.map"}